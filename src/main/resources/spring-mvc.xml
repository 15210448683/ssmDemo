<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans  
                        http://www.springframework.org/schema/beans/spring-beans-3.1.xsd  
                        http://www.springframework.org/schema/context  
                        http://www.springframework.org/schema/context/spring-context-3.1.xsd  
                        http://www.springframework.org/schema/mvc  
                        http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd">
	<!-- 自动扫描该包，使SpringMVC认为包下用了@controller注解的类是控制器 -->
	<context:component-scan base-package="com.cn.*.controller" >
		<!--排除以下包的内容-->
		<!--<context:exclude-filter type="" expression=""></context:exclude-filter>-->
		<!--扫描以下的内容,但不仅仅包含他,其它的也会扫描-->
		<!--<context:include-filter type="" expression=""></context:include-filter>-->
	</context:component-scan>

	<!--spring3.0版本注解功能及json功能 均已废弃,仍然可以使用   start-->

	<!--避免IE执行AJAX时，返回JSON出现下载文件  已废弃
	<bean id="mappingJacksonHttpMessageConverter"
		class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter">
		<property name="supportedMediaTypes">
			<list>
				<value>text/html;charset=UTF-8</value>
			</list>
		</property>
	</bean>-->

	<!-- 启动SpringMVC的注解功能，完成请求和注解POJO的映射
	<bean	class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
		<property name="messageConverters">
			<list>
				<ref bean="mappingJacksonHttpMessageConverter" />-->	<!-- JSON转换器
			</list>
		</property>
	</bean>-->
	<!-- 还要加入DefaultAnnotationHandlerMapping，不然会被 XML的映射覆盖！
	<bean class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping" />-->
	<!--spring3.0版本注解功能及json功能 均已废弃,仍然可以使用   end-->

	<!--spring4.0 使用的返回json-->
	<bean id="mappingJacksonHttpMessageConverter"
		  class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
		<property name="supportedMediaTypes">
			<list>
				<value>text/html;charset=UTF-8</value>
			</list>
		</property>
	</bean>
	<!--添加注解功能 start  -->

	<!-- 启动SpringMVC的注解功能，完成请求和注解POJO的映射-->
	<bean	class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
		<property name="messageConverters">
			<list>
				<ref bean="mappingJacksonHttpMessageConverter" />	<!-- JSON转换器-->
			</list>
		</property>
	</bean>
	<!-- 还要加入RequestMappingHandlerMapping，不然会被 XML的映射覆盖！-->
	<bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping" >
		<!--加入拦截器-->
		<property name="interceptors">
			<list>
				<ref bean="httpRequestInterceptor"/>
			</list>
		</property>
	</bean>
	<!--添加注解功能 end  -->
	<!-- 使用 mvc:annotation-driven代替上边注解映射器和注解适配器配置
        mvc:annotation-driven默认加载很多的参数绑定方法，
        比如json转换解析器就默认加载了，如果使用mvc:annotation-driven不用配置上边的RequestMappingHandlerMapping和RequestMappingHandlerAdapter
        实际开发时使用mvc:annotation-driven
     -->
	<!--
	<mvc:annotation-driven>
		<mvc:message-converters register-defaults="true">
			<bean class="org.springframework.http.converter.StringHttpMessageConverter">
				<property name="supportedMediaTypes" value="text/plain;charset=UTF-8" >
				</property>
			</bean>
			<bean id="mappingJacksonHttpMessageConverter" class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
				<property name="supportedMediaTypes">
					<list>
						<value>text/html;charset=UTF-8</value>
					</list>
				</property>
			</bean>
		</mvc:message-converters>
	</mvc:annotation-driven>-->
	<!--总拦截器-->
	<!--<mvc:interceptors>
		<bean class="com.cn." />
	</mvc:interceptors>-->




	<!--加入SimpleControllerHandlerAdapter 否则xml配置会报异常 -->
	<bean  class="org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter"></bean>


	<!-- 定义跳转的文件的前后缀 ，视图模式配置-->
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<!-- 这里的配置我的理解是自动给后面action的方法return的字符串加上前缀和后缀，变成一个 可用的url地址 -->
		<property name="prefix" value="/WEB-INF/jsp/" />
		<property name="suffix" value=".jsp" />
	</bean>
	
	<!-- 配置文件上传，如果没有使用文件上传可以不用配置，当然如果不配，那么配置文件中也不必引入上传组件包 -->
	<bean id="multipartResolver"  
        class="org.springframework.web.multipart.commons.CommonsMultipartResolver">  
        <!-- 默认编码 -->
        <property name="defaultEncoding" value="utf-8" />  
        <!-- 文件大小最大值 -->
        <property name="maxUploadSize" value="10485760000" />  
        <!-- 内存中的最大值 -->
        <property name="maxInMemorySize" value="40960" />  
    </bean>

	<!-- handler处理之前，可以有拦截器，继承HandlerInterceptor接口就ok -->
	<bean id="httpRequestInterceptor" class="com.cn.interceptor.HttpRequestInterceptor"></bean>
    
    
	
</beans>